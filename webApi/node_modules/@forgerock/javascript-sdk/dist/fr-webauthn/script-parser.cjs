"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const x=require("./enums.cjs"),e=require("./helpers.cjs");function C(t){const s=new TextEncoder,n=e.getIndexOne(t.match(/attestation"{0,}:\s{0,}"(\w+)"/)),c=Number(e.getIndexOne(t.match(/timeout"{0,}:\s{0,}(\d+)/))),m=e.getIndexOne(t.match(/userVerification"{0,}:\s{0,}"(\w+)"/)),i=e.getIndexOne(t.match(/requireResidentKey"{0,}:\s{0,}(\w+)/)),o=e.getIndexOne(t.match(/authenticatorAttachment"{0,}:\s{0,}"([\w-]+)/)),d=e.getIndexOne(t.match(/rp"{0,}:\s{0,}{([^}]+)}/)).trim(),a=e.getIndexOne(d.match(/id"{0,}:\s{0,}"([^"]*)"/)),p=e.getIndexOne(d.match(/name"{0,}:\s{0,}"([^"]*)"/)),r=e.getIndexOne(t.match(/user"{0,}:\s{0,}{([^]{0,})},/)).trim(),u=e.getIndexOne(r.match(/id"{0,}:\s{0,}Uint8Array.from\("([^"]+)"/)),l=e.getIndexOne(r.match(/name"{0,}:\s{0,}"([\d\w._-]+)"/)),h=e.getIndexOne(r.match(/displayName"{0,}:\s{0,}"([\d\w\s.@_-]+)"/)),g=e.getIndexOne(t.match(/pubKeyCredParams"*:\s*\[([^]+\d\s*})\s*]/)).trim(),I=e.parsePubKeyArray(g);if(!I){const O=new Error("Missing pubKeyCredParams property from registration options");throw O.name=x.WebAuthnOutcomeType.DataError,O}const A=e.getIndexOne(t.match(/excludeCredentials"{0,}:\s{0,}\[([^]+)\s{0,}]/)).trim(),y=e.parseCredentials(A),w=e.ensureArray(t.match(/challenge"{0,}:\s{0,}new\s{0,}(Uint|Int)8Array\(([^\)]+)/)),b=JSON.parse(w[2]),f=new Int8Array(b).buffer;return{attestation:n,authenticatorSelection:{userVerification:m,...o&&{authenticatorAttachment:o},...i==="true"&&{requireResidentKey:!!i}},challenge:f,...y.length&&{excludeCredentials:y},pubKeyCredParams:I,rp:{name:p,...a&&{id:a}},timeout:c,user:{displayName:h,id:s.encode(u),name:l}}}function N(t){let s,n;t.includes("acceptableCredentials")?n=e.getIndexOne(t.match(/acceptableCredentials"*\s*=\s*\[([^]+)\s*]/)).trim():n=e.getIndexOne(t.match(/allowCredentials"{0,}:\s{0,}\[([^]+)\s{0,}]/)).trim();const c=e.getIndexOne(t.match(/userVerification"{0,}:\s{0,}"(\w+)"/));n&&(s=(n.split("},")||[n]).map(r=>{const u=e.getIndexOne(r.match(/type"{0,}:\s{0,}"([\w-]+)"/)),l=e.ensureArray(r.match(/id"{0,}:\s{0,}new\s{0,}(Uint|Int)8Array\(([^\)]+)/)),h=JSON.parse(l[2]),g=new Int8Array(h).buffer;return{type:u,id:g}}));const m=Number(e.getIndexOne(t.match(/timeout"{0,}:\s{0,}(\d+)/))),i=e.ensureArray(t.match(/challenge"{0,}:\s{0,}new\s{0,}(Uint|Int)8Array\(([^\)]+)/)),o=JSON.parse(i[2]),d=new Int8Array(o).buffer,a=e.getIndexOne(t.match(/rpId"{0,}:\s{0,}\\{0,}"([^"\\]*)/));return{challenge:d,timeout:m,...s&&{allowCredentials:s},...c&&{userVerification:c},...a&&{rpId:a}}}exports.parseWebAuthnAuthenticateText=N;exports.parseWebAuthnRegisterText=C;
