import { CallbackType as u } from "../auth/enums.js";
class i {
  /**
   * @method isQRCodeStep - determines if step contains QR Code callbacks
   * @param {FRStep} step - step object from AM response
   * @returns {boolean}
   */
  static isQRCodeStep(t) {
    const e = t.getCallbacksOfType(u.HiddenValueCallback);
    return e.length === 0 ? !1 : !!this.getQRCodeURICb(e);
  }
  /**
   * @method getQRCodeData - gets the necessary information from the QR Code callbacks
   * @param {FRStep} step - step object from AM response
   * @returns {QRCodeData}
   */
  static getQRCodeData(t) {
    const e = t.getCallbacksOfType(u.HiddenValueCallback);
    if (e.length === 0)
      throw new Error(
        "QR Code step must contain a HiddenValueCallback. Use `FRQRCode.isQRCodeStep` to guard."
      );
    const a = this.getQRCodeURICb(e), s = a ? a.getOutputValue("value") : "", o = typeof s == "string" && s.includes("otpauth://") ? "otp" : "push", l = t.getCallbacksOfType(u.TextOutputCallback).find((n) => n.getMessageType() !== "4");
    return {
      message: l ? l.getMessage() : "",
      use: o,
      uri: typeof s == "string" ? s : ""
    };
  }
  static getQRCodeURICb(t) {
    return t.find((e) => {
      const a = e.getOutputValue("value");
      return typeof a == "string" ? a?.includes("otpauth://") || a?.includes("pushauth://") : !1;
    });
  }
}
export {
  i as default
};
