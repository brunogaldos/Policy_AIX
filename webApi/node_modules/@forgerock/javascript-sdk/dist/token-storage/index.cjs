"use strict";const o=require("../config/index.cjs"),n=require("../util/logger.cjs"),r=require("./local-storage.cjs"),s=require("./session-storage.cjs");class a{static async get(){const{clientId:t,tokenStore:e}=this.getClientConfig();if(e==="sessionStorage")return await s.get(t);if(e==="localStorage")return await r.get(t);if(e==="indexedDB")n.FRLogger.warn("IndexedDB is not supported in this version.");else if(e&&e.get)return await e.get(t);return await r.get(t)}static async set(t){const{clientId:e,tokenStore:i}=this.getClientConfig();if(i==="sessionStorage")return await s.set(e,t);if(i==="localStorage")return await r.set(e,t);if(i==="indexedDB")n.FRLogger.warn("IndexedDB is not supported in this version.");else if(i&&i.set)return await i.set(e,t);return await r.set(e,t)}static async remove(){const{clientId:t,tokenStore:e}=this.getClientConfig();if(e==="sessionStorage")return await s.remove(t);if(e==="localStorage")return await r.remove(t);if(e==="indexedDB")n.FRLogger.warn("IndexedDB is not supported in this version.");else if(e&&e.remove)return await e.remove(t);return await r.remove(t)}static getClientConfig(){const{clientId:t="unconfiguredClient",tokenStore:e="localStorage"}=o.get();return{clientId:t,tokenStore:e}}}module.exports=a;
