"use strict";const t=require("./constants.cjs"),s=require("./helpers.cjs");function l(n){return{...n,oauthThreshold:n.oauthThreshold||t.DEFAULT_OAUTH_THRESHOLD,logLevel:n.logLevel||"none",platformHeader:n.platformHeader||!1,prefix:n.prefix||t.PREFIX}}class a{static set(e){if(!this.isValid(e))throw new Error("Configuration is invalid");e.serverConfig&&this.validateServerConfig(e.serverConfig),this.options={...l(e)}}static async setAsync(e){if(!e.serverConfig.wellknown)throw new Error("Missing well-known property. Use `Config.set` method if not using well-known endpoint.");e.serverConfig.baseUrl&&console.warn("The baseUrl property passed in will be ignored, and replaced with well-known origin.");const r=await s.fetchWellKnown(e),o=s.convertWellKnown(r);delete e.serverConfig.wellknown;const i=e;i.serverConfig=o,this.set(i)}static get(e){if(!this.options&&!e)throw new Error("Configuration has not been set");const r={...this.options,...e};if(!r.serverConfig||!r.serverConfig.baseUrl)throw new Error("Server configuration has not been set");return r}static isValid(e){return!!(e&&e.serverConfig)}static validateServerConfig(e){e.timeout||(e.timeout=t.DEFAULT_TIMEOUT);const r=e.baseUrl;r&&r.charAt(r.length-1)!=="/"&&(e.baseUrl=r+"/")}}module.exports=a;
