"use strict";const h=require("../config/index.cjs"),t=require("../shared/constants.cjs"),E=require("../util/http.cjs"),R=require("../util/timeout.cjs"),m=require("../config/enums.cjs"),f=require("../util/middleware.cjs"),i=require("../util/url.cjs");class q{static async logout(o){const{middleware:n,platformHeader:a,realmPath:d,serverConfig:r}=h.get(o),u={credentials:"include",headers:new Headers({"Accept-API-Version":"protocol=1.0,resource=2.0","X-Requested-With":t.REQUESTED_WITH}),method:"POST"},c=`${i.getEndpointPath("sessions",d,r.paths)}?_action=logout`,l=i.resolve(r.baseUrl,c),e=f({url:new URL(l),init:u},{type:m.ActionTypes.Logout})(n);a&&(e.init.headers instanceof Headers?e.init.headers.set("X-Requested-Platform",t.X_REQUESTED_PLATFORM):Array.isArray(e.init.headers)?e.init.headers.push(["X-Requested-Platform",t.X_REQUESTED_PLATFORM]):e.init.headers?e.init.headers["X-Requested-Platform"]=t.X_REQUESTED_PLATFORM:e.init.headers={"X-Requested-Platform":t.X_REQUESTED_PLATFORM});const s=await R.withTimeout(fetch(e.url.toString(),e.init),r.timeout);if(!E.isOkOr4xx(s))throw new Error(`Failed to log out; received ${s.status}`);return s}}module.exports=q;
