"use strict";const S=require("../config/index.cjs"),q=require("../config/enums.cjs"),y=require("../fr-auth/index.cjs"),w=require("../fr-auth/enums.cjs"),T=require("../fr-auth/fr-step.cjs"),x=require("../token-manager/index.cjs"),f=require("../token-storage/index.cjs"),I=require("../util/timeout.cjs"),a=require("./helpers.cjs"),g=require("../util/middleware.cjs");class v{static async request(e){let r=await this._request(e,!1),t,i=!1;if(a.newTokenRequired(r,e.requiresNewToken)&&(r=await this._request(e,!0)),e.authorization&&e.authorization.handleStep)if(r.status===401&&a.examineForIGAuthzHeader(r.headers)?(i=!0,t=a.normalizeIGJSONResponseToAdviceJSON(r)):r.redirected&&a.examineForIGAuthz(r)?(i=!0,t=a.normalizeIGRedirectResponseToAdviceJSON(r)):await a.examineForRESTAuthz(r)&&(t=await a.normalizeRESTJSON(r)),t&&t.advices){const{middleware:u,realmPath:s,serverConfig:o}=S.get(e.authorization.config),n=a.buildAuthzOptions(t,o.baseUrl,e.timeout,s,o.paths),h=new URL(n.url),c=h.searchParams.get("authIndexType"),m=h.searchParams.get("authIndexValue"),p=g({url:new URL(n.url),init:n.init},{type:q.ActionTypes.StartAuthenticate,payload:{type:c,tree:m}}),{url:z,init:A}=p(u);n.url=z.toString(),n.init=A;const l=await this._request(n,!1);if(!await a.isAuthzStep(l))throw new Error('Error: Initial response from auth server not a "step".');if(!a.hasAuthzAdvice(t))throw new Error("Error: Transactional or Service Advice is empty.");await this.stepIterator(l,e.authorization.handleStep);const d=await f.get();i?e.url=a.addAuthzInfoToURL(e.url,t.advices,d):e.init.headers=a.addAuthzInfoToHeaders(e.init,t.advices,d),r=await this._request(e,!1)}else throw new Error("Error: Unable to process advice");return r}static async setAuthHeaders(e,r){let t=await f.get();return t&&t.accessToken&&(t=await x.getTokens({forceRenew:r}),t&&t.accessToken&&e.set("Authorization",`Bearer ${t.accessToken}`)),e}static async stepIterator(e,r){const t=await e.json(),i=new T(t);return new Promise(async(u,s)=>{async function o(n){const h=await r(n),c=await y.next(h,{tree:"",type:""});c.type===w.StepType.LoginSuccess?u():c.type===w.StepType.LoginFailure?s("Authentication tree failure."):o(c)}o(i)})}static async _request(e,r){const{url:t,init:i,timeout:u}=e;let s=new Headers(i.headers||{});return e.authorization&&s.set("x-authenticate-response","header"),e.bypassAuthentication||(s=await this.setAuthHeaders(s,r)),i.headers=s,I.withTimeout(fetch(t,i),u)}}module.exports=v;
