"use strict";const R=require("../config/index.cjs"),h=require("../config/enums.cjs"),a=require("../shared/constants.cjs"),m=require("../util/timeout.cjs"),u=require("../util/url.cjs"),q=require("../util/middleware.cjs");class T{static async next(e,t){const{middleware:i,platformHeader:n,realmPath:d,serverConfig:r,tree:o,type:c}=R.get(t),l=t?t.query:{},p=this.constructUrl(r,d,o,l),s=q({url:new URL(p),init:this.configureRequest(e)},{type:e?h.ActionTypes.Authenticate:h.ActionTypes.StartAuthenticate,payload:{tree:o,type:c||"service"}})(i);n&&(s.init.headers instanceof Headers?s.init.headers.set("X-Requested-Platform",a.X_REQUESTED_PLATFORM):Array.isArray(s.init.headers)?s.init.headers.push(["X-Requested-Platform",a.X_REQUESTED_PLATFORM]):s.init.headers?s.init.headers["X-Requested-Platform"]=a.X_REQUESTED_PLATFORM:s.init.headers={"X-Requested-Platform":a.X_REQUESTED_PLATFORM});const y=await m.withTimeout(fetch(s.url.toString(),s.init),r.timeout);return await this.getResponseJson(y)}static constructUrl(e,t,i,n){const r={...n,...i?{authIndexType:"service",authIndexValue:i}:void 0},o=Object.keys(r).length>0?`?${u.stringify(r)}`:"",c=u.getEndpointPath("authenticate",t,e.paths);return u.resolve(e.baseUrl,`${c}${o}`)}static configureRequest(e){return{body:e?JSON.stringify(e):void 0,credentials:"include",headers:new Headers({Accept:"application/json","Accept-API-Version":"protocol=1.0,resource=2.1","Content-Type":"application/json","X-Requested-With":a.REQUESTED_WITH}),method:"POST"}}static async getResponseJson(e){const t=e.headers.get("content-type"),n=t&&t.indexOf("application/json")>-1?await e.json():{};return n.status=e.status,n.ok=e.ok,n}}module.exports=T;
