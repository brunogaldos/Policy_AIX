"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("@reduxjs/toolkit/query"),n=({baseUrl:i,realmPath:r})=>o.createApi({reducerPath:"deviceClient",baseQuery:o.fetchBaseQuery({credentials:"include",prepareHeaders:t=>(t.set("Content-Type","application/json"),t.set("Accept","application/json"),t.set("x-requested-with","forgerock-sdk"),t.set("x-requested-platform","javascript"),t),baseUrl:i}),endpoints:t=>({getOAthDevices:t.query({query:({realm:e=r,userId:s})=>`json/realms/${e}/users/${s}/devices/2fa/oath?_queryFilter=true`}),deleteOathDevice:t.mutation({query:({realm:e=r,userId:s,device:u})=>({method:"DELETE",url:`json/realms/${e}/users/${s}/devices/2fa/oath/${u.uuid}`,body:u})}),getPushDevices:t.query({query:({realm:e=r,userId:s})=>`/json/realms/${e}/users/${s}/devices/2fa/push?_queryFilter=true`}),deletePushDevice:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`/json/realms/${e}/users/${s}/devices/2fa/push/${u.uuid}`,method:"DELETE",body:{}})}),getWebAuthnDevices:t.query({query:({realm:e=r,userId:s})=>`/json/realms/${e}/users/${s}/devices/2fa/webauthn?_queryFilter=true`}),updateWebAuthnDeviceName:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`/json/realms/${e}/users/${s}/devices/2fa/webauthn/${u.uuid}`,method:"PUT",body:u})}),deleteWebAuthnDeviceName:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`/json/realms/${e}/users/${s}/devices/2fa/webauthn/${u.uuid}`,method:"DELETE",body:u})}),getBoundDevices:t.mutation({query:({realm:e=r,userId:s})=>`/json/realms/${e}/users/${s}/devices/2fa/binding?_queryFilter=true`}),updateBoundDevice:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`/json/realms/root/realms/${e}/users/${s}/devices/2fa/binding/${u.uuid}`,method:"PUT",body:u})}),deleteBoundDevice:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`/json/realms/root/realms/${e}/users/${s}/devices/2fa/binding/${u.uuid}`,method:"DELETE",body:u})}),getDeviceProfiles:t.query({query:({realm:e=r,userId:s})=>`json/realms/${e}/users/${s}/devices/profile?_queryFilter=true`}),updateDeviceProfile:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`json/realms/${e}/users/${s}/devices/profile/${u.identifier}`,method:"PUT",body:u})}),deleteDeviceProfile:t.mutation({query:({realm:e=r,userId:s,device:u})=>({url:`json/realms/${e}/users/${s}/devices/profile/${u.identifier}`,method:"DELETE",body:u})})})});exports.deviceService=n;
