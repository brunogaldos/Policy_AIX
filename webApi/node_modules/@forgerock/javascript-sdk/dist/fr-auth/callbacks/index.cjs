"use strict";class r{constructor(e){this.payload=e}getType(){return this.payload.type}getInputValue(e=0){return this.getArrayElement(this.payload.input,e).value}setInputValue(e,t=0){this.getArrayElement(this.payload.input,t).value=e}getOutputValue(e=0){return this.getArrayElement(this.payload.output,e).value}getOutputByName(e,t){const n=this.payload.output.find(u=>u.name===e);return n?n.value:t}getArrayElement(e,t=0){if(e===void 0)throw new Error(`No NameValue array was provided to search (selector ${t})`);if(typeof t=="number"){if(t<0||t>e.length-1)throw new Error(`Selector index ${t} is out of range`);return e[t]}if(typeof t=="string"){const n=e.find(u=>u.name===t);if(!n)throw new Error(`Missing callback input entry "${t}"`);return n}if(typeof t=="object"&&t.test&&t.exec){const n=e.find(u=>t.test(u.name));if(!n)throw new Error(`Missing callback input entry "${t}"`);return n}throw new Error("Invalid selector value type")}}module.exports=r;
