"use strict";const v=require("../config/index.cjs"),x=require("../auth/index.cjs"),w=require("../auth/enums.cjs"),q=require("./fr-login-failure.cjs"),I=require("./fr-login-success.cjs"),k=require("./fr-step.cjs");class n{static get previousStepKey(){return`${v.get().prefix}-PreviousStep`}static async next(t,r){const e=await x.next(t?t.payload:void 0,r);if(e.authId){const a=r?r.callbackFactory:void 0;return new k(e,a)}return!e.authId&&e.ok?new I(e):new q(e)}static redirect(t){const e=t.getCallbackOfType(w.CallbackType.RedirectCallback).getRedirectUrl();localStorage.setItem(this.previousStepKey,JSON.stringify(t)),location.assign(e)}static async resume(t,r){const e=new URL(t),a=e.searchParams.get("code"),i=e.searchParams.get("error"),u=e.searchParams.get("errorCode"),d=e.searchParams.get("errorMessage"),s=e.searchParams.get("form_post_entry"),l=e.searchParams.get("nonce"),g=e.searchParams.get("RelayState"),c=e.searchParams.get("responsekey"),p=e.searchParams.get("scope"),o=e.searchParams.get("state"),h=e.searchParams.get("suspendedId"),m=e.searchParams.get("authIndexValue")??void 0;let y;function f(){return a&&o||s||c}if(f()){const S=localStorage.getItem(this.previousStepKey);if(!S)throw new Error("Error: could not retrieve original redirect information.");try{y=JSON.parse(S)}catch{throw new Error("Error: could not parse redirect params or step information")}localStorage.removeItem(this.previousStepKey)}const P={...r,query:{...a&&{code:a},...i&&{error:i},...u&&{errorCode:u},...d&&{errorMessage:d},...s&&{form_post_entry:s},...l&&{nonce:l},...g&&{RelayState:g},...c&&{responsekey:c},...p&&{scope:p},...o&&{state:o},...h&&{suspendedId:h},...r&&r.query},...(r?.tree??m)&&{tree:r?.tree??m}};return await this.next(y,P)}static async start(t){return await n.next(void 0,t)}}module.exports=n;
