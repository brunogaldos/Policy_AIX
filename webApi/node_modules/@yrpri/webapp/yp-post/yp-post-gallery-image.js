var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, css } from 'lit';
import { customElement, property } from 'lit/decorators.js';
import { YpBaseElement } from '../common/yp-base-element.js';
import '../common/yp-image.js';
import { YpMediaHelpers } from '../common/YpMediaHelpers.js';
let YpPostGalleryImage = class YpPostGalleryImage extends YpBaseElement {
    constructor() {
        super(...arguments);
        this.sizingMode = 'cover';
    }
    static get styles() {
        return [
            super.styles,
            css `
        yp-image {
          max-width: 700px;
          max-height: 700px;
          object-fit: scale-down;
        }

        @media (max-width: 800px) {
          yp-image {
            max-width: 80vw;
            max-height: 350px;
          }
        }
      `,
        ];
    }
    get postImagePath() {
        if (this.post) {
            return YpMediaHelpers.getImageFormatUrl(this.post.PostHeaderImages, 0);
        }
        else {
            return '';
        }
    }
    get anyImagePath() {
        return this.postImagePath;
    }
    render() {
        const style = `--yp-image-width:${this.imageWidth ?? 'auto'}px;--yp-image-height:${this.imageHeight ?? 'auto'}px;`;
        return html `
      <yp-image
        style="${style}"
        .alt="${this.altTag || this.post?.name || ''}"
        .title="${this.post?.name || ''}"
        .sizing="${this.sizingMode}"
        src="${this.postImagePath}"></yp-image>
    `;
    }
};
__decorate([
    property({ type: Object })
], YpPostGalleryImage.prototype, "post", void 0);
__decorate([
    property({ type: Number, attribute: 'image-width' })
], YpPostGalleryImage.prototype, "imageWidth", void 0);
__decorate([
    property({ type: Number, attribute: 'image-height' })
], YpPostGalleryImage.prototype, "imageHeight", void 0);
__decorate([
    property({ type: String, attribute: 'alt-tag' })
], YpPostGalleryImage.prototype, "altTag", void 0);
__decorate([
    property({ type: String, attribute: 'sizing-mode' })
], YpPostGalleryImage.prototype, "sizingMode", void 0);
YpPostGalleryImage = __decorate([
    customElement('yp-post-gallery-image')
], YpPostGalleryImage);
export { YpPostGalleryImage };
//# sourceMappingURL=yp-post-gallery-image.js.map