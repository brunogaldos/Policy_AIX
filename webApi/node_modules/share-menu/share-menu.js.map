{"version":3,"file":"share-menu.js","sources":["src/share-menu.ts"],"sourcesContent":["import { updateBooleanAttribute, updateStringAttribute } from './helpers.js';\n\nexport interface ShareMenuParams {\n  text?: string;\n  title?: string;\n  url?: string;\n  image?: string;\n}\n\nexport interface ShareTarget extends HTMLElement {\n  readonly displayName: string;\n  readonly hint?: string;\n  readonly color: string;\n  readonly outline?: string;\n  readonly icon: string;\n  readonly share: (shareMenu: ShareMenu) => unknown;\n}\n\nconst isShareTargetNode = (node: Node): node is ShareTarget =>\n  node.nodeType === Node.ELEMENT_NODE &&\n  node.nodeName.startsWith('SHARE-TARGET-') &&\n  !node.nodeName.startsWith('SHARE-TARGET-PRESET-');\n\nconst isShareTargetPreset = (node: Node): boolean =>\n  node.nodeType === Node.ELEMENT_NODE &&\n  node.nodeName.startsWith('SHARE-TARGET-PRESET-');\n\nconst isShareTarget = (node: Node): node is ShareTarget => {\n  const shareTarget = node as ShareTarget;\n\n  return (\n    typeof shareTarget.displayName === 'string' &&\n    typeof shareTarget.color === 'string' &&\n    typeof shareTarget.icon === 'string' &&\n    typeof shareTarget.share === 'function'\n  );\n};\n\n/**\n * `share-menu` is a complete and simple to use share menu that uses\n * [Web Share API](https://developers.google.com/web/updates/2016/10/navigator-share) when possible,\n * with a fallback to a nice share menu that tries to emulate the experience of the native one.\n *\n * -----------------------------------------------------------------------------------------------------------------\n *\n * Here you can see the list of the supported targets, as well as the limitations that each one gives:\n *\n * - Copy to clipboard\n * - Blogger\n * - Bluesky\n * - Diaspora - _URL and title only_\n * - Douban\n * - Email\n * - Evernote - _URL and title only_\n * - Facebook - _URL only if not using [Facebook JS SDK](https://developers.facebook.com/docs/javascript) or not providing a Facebook App ID_\n * - Flipboard - _URL and title only_\n * - Gmail\n * - Google Translate - _Only translates the page at the given URL_\n * - Hacker News - _URL and title only_\n * - Instapaper\n * - LINE - _URL only_\n * - LinkedIn - _URL only_\n * - LiveJournal\n * - Mastodon\n * - Messenger - _URL only, requires a Facebook App ID_\n * - Mix - _URL only_\n * - Odnoklassniki (OK.ru)\n * - Pinterest\n * - Pocket - _URL only_\n * - Print - _Only prints the page at the given URL_\n * - QZone\n * - Reddit - _Shares an URL if there is no text provided, otherwise a text with the URL appended at the end_\n * - Skype\n * - SMS\n * - Snapchat - _URL only_\n * - Substack Notes\n * - KakaoTalk - _URL only_\n * - Telegram\n * - Tumblr\n * - X (Twitter)\n * - VKontakte (VK)\n * - Weibo\n * - WhatsApp\n * - XING - _URL only_\n * - Yahoo Mail\n *\n * -----------------------------------------------------------------------------------------------------------------\n *\n * Example usage:\n * ```html\n * <share-menu title=\"Ohai!\" text=\"Hello, World!\" url=\"https://www.example.com/\"></share-menu>\n * ```\n *\n * -----------------------------------------------------------------------------------------------------------------\n *\n * _Browse the [API docs](https://www.webcomponents.org/element/Dabolus/share-menu) for a fully working example._\n *\n * @customElement\n * @demo demo/index.html\n */\nexport class ShareMenu extends HTMLElement {\n  /**\n   * Fired when the content is shared (i.e. when a target is clicked).\n   * The event payload contains an `origin` field that will be equal\n   * to `native` if the native share menu has been triggered, or to\n   * `fallback` if the fallback share menu has been used instead.\n   * If the fallback share menu is used, the event payload will also\n   * have a `target` field, that contains the ID of the share target\n   * chosen by the user.\n   *\n   * @event share\n   */\n\n  /**\n   * Fired when the share menu closes (either because the user shared\n   * some content or closed the share menu).\n   * The event payload contains an `origin` field that will be equal\n   * to `native` if the native share menu has been triggered, or to\n   * `fallback` if the fallback share menu has been used instead.\n   *\n   * @event close\n   */\n\n  /**\n   * Fired when there is an error while sharing.\n   * The reason of the error can be found in the `message` field of\n   * the event payload.\n   *\n   * @event error\n   */\n\n  /**\n   * Whether the fallback dialog is currently opened or not.\n   *\n   * @return {boolean}\n   */\n  public get opened(): boolean {\n    return this.hasAttribute('opened');\n  }\n\n  public set opened(val: boolean) {\n    updateBooleanAttribute(this, 'opened', val);\n  }\n\n  /**\n   * The title of the dialog displayed if the user browser does not support the Web Share API.\n   * Defaults to \"Share\".\n   *\n   * @return {string | null}\n   */\n  public get dialogTitle(): string | null {\n    return this.getAttribute('dialog-title');\n  }\n\n  public set dialogTitle(val: string | null | undefined) {\n    updateStringAttribute(this, 'dialog-title', val);\n  }\n\n  /**\n   * The hint to show below the copy to clipboard button.\n   * Defaults to \"Copy\".\n   *\n   * @return {string | null}\n   */\n  public get copyHint(): string | null {\n    return this.getAttribute('copy-hint');\n  }\n\n  public set copyHint(val: string | null | undefined) {\n    updateStringAttribute(this, 'copy-hint', val);\n  }\n\n  /**\n   * The body of the content you want to share.\n   * Defaults to your description meta tag.\n   *\n   * @return {string | null}\n   */\n  public get text(): string | null {\n    return this.getAttribute('text');\n  }\n\n  public set text(val: string | null | undefined) {\n    updateStringAttribute(this, 'text', val);\n  }\n\n  /**\n   * The title of the content you want to share.\n   * Defaults to your page title.\n   *\n   * @return {string | null}\n   */\n  public get title(): string | null {\n    return this.getAttribute('title');\n  }\n\n  public set title(val: string | null | undefined) {\n    updateStringAttribute(this, 'title', val);\n  }\n\n  /**\n   * The URL of the content you want to share.\n   * Defaults to your canonical URL if available, otherwise to your page `window.location.href`.\n   *\n   * @return {string | null}\n   */\n  public get url(): string | null {\n    return this.getAttribute('url');\n  }\n\n  public set url(val: string | null | undefined) {\n    updateStringAttribute(this, 'url', val);\n  }\n\n  /**\n   * The URL of the image you want to share.\n   *\n   * @return {string | null}\n   */\n  public get image(): string | null {\n    return this.getAttribute('image');\n  }\n\n  public set image(val: string | null | undefined) {\n    updateStringAttribute(this, 'image', val);\n  }\n\n  /**\n   * Set to true if you want to hide the fallback dialog backdrop.\n   *\n   * @return {boolean}\n   */\n  public get noBackdrop(): boolean {\n    return this.hasAttribute('no-backdrop');\n  }\n\n  public set noBackdrop(val: boolean) {\n    updateBooleanAttribute(this, 'opened', val);\n  }\n\n  /**\n   * Whether to show the handle or not.\n   * It can have three different values:\n   *\n   * - \"auto\" _(default)_ - only show the handle on touchscreen devices (i.e. when device pointer is coarse);\n   * - \"always\" - always show the handle;\n   * - \"never\" - never show the handle.\n   *\n   * @return {string | null}\n   */\n  public get handle(): string | null {\n    return this.getAttribute('handle');\n  }\n\n  public set handle(val: string | null | undefined) {\n    updateStringAttribute(this, 'handle', val);\n  }\n\n  /**\n   * The list of share targets displayed in the fallback dialog.\n   *\n   * @return {ShareTarget[]}\n   */\n  public get targets(): ShareTarget[] {\n    return this._targets;\n  }\n\n  public static readonly observedAttributes = [\n    'dialog-title',\n    'copy-hint',\n    'opened',\n    'text',\n    'title',\n    'url',\n    'image',\n    'no-backdrop',\n    'handle',\n  ];\n  public static stylesheet?: CSSStyleSheet;\n\n  /** @private */\n  private static readonly _supportsAdoptingStyleSheets =\n    typeof globalThis.CSSStyleSheet?.prototype.replace === 'function';\n  /** @private */\n  private readonly _styles: string;\n  /** @private */\n  private readonly _template: HTMLTemplateElement;\n  /** @private */\n  private _previousFocus: HTMLElement;\n  /** @private */\n  private _firstFocusableElRef: HTMLElement;\n  /** @private */\n  private _lastFocusableElRef: HTMLElement;\n  /** @private */\n  private _backdropRef: HTMLDivElement;\n  /** @private */\n  private _dialogRef: HTMLDivElement;\n  /** @private */\n  private _dialogTitleRef: HTMLHeadingElement;\n  /** @private */\n  private _targetsContainerRef: HTMLDivElement;\n  /** @private */\n  private _clipboardImagePreviewRef: HTMLImageElement;\n  /** @private */\n  private _clipboardPreviewRef: HTMLPreElement;\n  /** @private */\n  private _clipboardButtonRef: HTMLButtonElement;\n  /** @private */\n  private _targets: ShareTarget[] = [];\n  /** @private */\n  private _filePromise: Promise<File> = Promise.resolve<File>(undefined);\n\n  public constructor() {\n    super();\n\n    this._styles = `/* css */\n      :host {\n        font-family: 'Google Sans', 'Roboto', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        max-height: 100%;\n        z-index: -1;\n        will-change: z-index;\n        transition: .3s z-index step-end;\n        overflow-y: auto;\n        display: none;\n      }\n\n      :host([opened]) {\n        z-index: 9999;\n        transition: .3s z-index step-start;\n      }\n\n      * {\n        box-sizing: border-box;\n      }\n\n      #backdrop {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        background: var(--sm-backdrop-color, #000);\n        will-change: opacity;\n        transition: .3s opacity cubic-bezier(.4, 0, 1, 1);\n        cursor: pointer;\n        z-index: -1;\n      }\n\n      :host([opened]) #backdrop {\n        opacity: .6;\n        transition: .3s opacity cubic-bezier(0, 0, .2, 1);\n      }\n\n      :host([no-backdrop]) #backdrop {\n        display: none;\n      }\n\n      #dialog {\n        margin: 100vh auto 0 auto;\n        background: var(--sm-background-color, #ece6f0);\n        width: 100%;\n        max-width: 640px;\n        will-change: transform;\n        transform: translateY(100vh);\n        transition: .3s transform cubic-bezier(.4, 0, 1, 1);\n        border-radius: 16px 16px 0 0;\n      }\n\n      :host([opened]) #dialog {\n        transform: translateY(0);\n        transition: .3s transform cubic-bezier(0, 0, .2, 1);\n      }\n\n      #handle {\n        position: sticky;\n        top: 0;\n        margin: 0 auto -20px auto;\n        padding: 8px 16px;\n        width: 96px;\n        border-radius: 0 0 8px 8px;\n        background: var(--sm-background-color, #ece6f0);\n        z-index: 1;\n      }\n\n      :host([handle='never']) #handle {\n        display: none;\n      }\n\n      @media (pointer: fine) {\n        :host([handle='auto']) #handle {\n          display: none;\n        }\n      }\n\n      #handle::after {\n        content: '';\n        display: block;\n        width: 64px;\n        height: 4px;\n        border-radius: 2px;\n        background: var(--sm-handle-color, #79747e);\n        margin: auto;\n      }\n\n      hr {\n        margin: 0 16px;\n        border: 1px solid var(--sm-divider-color, #c4c7c5);\n      }\n\n      #title {\n        color: var(--sm-title-color, #1c1b1f);\n        font-weight: 500;\n        font-size: 18px;\n        margin: 0;\n        padding: 16px 16px 0 16px;\n      }\n\n      #clipboard-container {\n        display: flex;\n        min-height: 72px;\n        max-height: 192px;\n        align-items: center;\n        margin: 16px;\n        padding: 12px 8px;\n        border-radius: 16px;\n        gap: 8px;\n        background: var(--sm-clipboard-background-color, #e6e0e9);\n      }\n\n      #clipboard-container > img {\n        flex: 0;\n        width: 100%;\n        height: 100%;\n        max-width: 192px;\n        max-height: 144px;\n      }\n\n      #clipboard-container > pre {\n        flex: 1;\n        font-family: inherit;\n        color: var(--sm-preview-color, #49454e);\n        margin: 0;\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n      }\n\n      :host:not([title]):not([text]):not([url]) #clipboard-container > pre,\n      :host:not([image]) #clipboard-container > img {\n        display: none;\n      }\n\n      #clipboard-container > button {\n        flex: 0;\n        padding: 0;\n      }\n\n      #targets-container {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        padding: 12px;\n      }\n\n      .target {\n        padding: 12px;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: center;\n        appearance: none;\n        cursor: pointer;\n        border: none;\n        outline: none;\n        background: transparent;\n        font-family: inherit;\n        will-change: transform;\n        transition: .3s transform;\n      }\n\n      .target:hover {\n        transform: scale(1.05);\n      }\n\n      .icon, .clipboard-icon {\n        position: relative;\n        border-radius: 50%;\n      }\n\n      .icon {\n        width: 42px;\n        height: 42px;\n        padding: 12px;\n        fill: #fff;\n      }\n\n      .clipboard-icon {\n        width: 36px;\n        height: 36px;\n        padding: 8px;\n        fill: var(--sm-preview-color, #49454e);\n      }\n\n      .icon::before, .icon::after, .clipboard-icon::before, .clipboard-icon::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background: var(--sm-ripple-color, #fff);\n        opacity: .3;\n        will-change: transform;\n        transition: .3s transform;\n        transform: scale(0);\n      }\n\n      .icon::after, .clipboard-icon::after {\n        opacity: .4;\n      }\n\n      .target:focus .icon::before,\n      .target:active .icon::after,\n      .target:focus .clipboard-icon::before,\n      .target:active .clipboard-icon::after {\n        transform: scale(1);\n      }\n\n      .label, .hint {\n        width: 72px;\n        font-weight: 400;\n        text-align: center;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      }\n\n      .label {\n        padding-top: 10px;\n        color: var(--sm-labels-color, #1c1b1f);\n        font-size: 14px;\n      }\n\n      .hint {\n        padding-top: 4px;\n        color: var(--sm-hint-color, #49454e);\n        font-size: 12px;\n      }\n\n      slot {\n        display: none;\n      }\n    `;\n\n    this._template = document.createElement('template');\n    this._template.innerHTML = `<!-- html -->\n      ${\n        ShareMenu._supportsAdoptingStyleSheets\n          ? ''\n          : `<style>${this._styles}</style>`\n      }\n      <div id=\"backdrop\" part=\"backdrop\" tabindex=\"-1\"></div>\n      <div id=\"dialog\" part=\"dialog\" role=\"dialog\" aria-labelledby=\"title\">\n        <div id=\"handle\"></div>\n        <h2 id=\"title\" part=\"title\"></h2>\n        <div id=\"clipboard-container\">\n          <img id=\"clipboard-image-preview\">\n          <pre id=\"clipboard-preview\"></pre>\n          <button class=\"target\" id=\"clipboard\" aria-label=\"Copy\">\n            <div class=\"clipboard-icon\">\n              <svg viewBox=\"0 0 256 256\">\n                <path d=\"M180 233H41V70H17v164a23 23 0 0024 22h139zm36-24a23 23 0 0023-23V23v-1a23 23 0 00-24-22H87a23 23 0 00-23 23v163a23 23 0 0023 23h128zm-1-23H87V23h128z\"/>\n              </svg>\n            </div>\n          </button>\n        </div>\n        <hr>\n        <div id=\"targets-container\"></div>\n      </div>\n      <slot></slot>\n    `;\n\n    // If the shadow root already exists, it means that the component\n    // has been rendered on the server using Declarative Shadow DOM,\n    // so we don't need to create a new shadow root\n    if (this.shadowRoot) {\n      return;\n    }\n\n    this.attachShadow({ mode: 'open' });\n    if (ShareMenu._supportsAdoptingStyleSheets) {\n      ShareMenu.stylesheet = new CSSStyleSheet();\n      this.shadowRoot.adoptedStyleSheets = [ShareMenu.stylesheet];\n    }\n    this.shadowRoot.appendChild(this._template.content.cloneNode(true));\n  }\n\n  /**\n   * Displays the share dialog with the `title`, `text`, and `url` provided as attributes/properties.\n   * You can also override their values by passing them as a parameter to this method. This can be particularly\n   * useful if you are creating the dialog directly from JavaScript.\n   *\n   * @param {{ text: string, title: string, url: string }=} props An object containing `text`, `title`, and `url`, that will override the element attributes/properties.\n   * @return {Promise<void>} A promise that resolves when the user selects a share target.\n   */\n  public async share({\n    text = this.text,\n    title = this.title,\n    url = this.url,\n    image = this.image,\n  }: ShareMenuParams = {}) {\n    this.text = text;\n    this.title = title;\n    this.url = url;\n    this.image = image;\n    if (!navigator.share) {\n      return this._showFallbackShare();\n    }\n    try {\n      const file = await this._filePromise;\n      await navigator.share({\n        text: this.text || undefined,\n        title: this.title || undefined,\n        url: this.url || undefined,\n        files: file ? [file] : undefined,\n      });\n      this.opened = false;\n      ['share', 'close'].forEach((event) =>\n        this._emitCustomEvent(event, { origin: 'native' }),\n      );\n    } catch (error) {\n      // The browser throws an AbortError if user changes their mind and decides\n      // not to share anything using the native share menu.\n      // In that case, we don't want to show our fallback share menu.\n      if ((error as Error).name !== 'AbortError') {\n        return this._showFallbackShare();\n      }\n      this._emitCustomEvent('close', { origin: 'native' });\n    }\n  }\n\n  /** @private */\n  private connectedCallback() {\n    if (\n      ShareMenu._supportsAdoptingStyleSheets &&\n      ShareMenu.stylesheet &&\n      ShareMenu.stylesheet.cssRules.length === 0\n    ) {\n      ShareMenu.stylesheet.replace(this._styles);\n    }\n    if (this.text === null) {\n      this.text =\n        document.querySelector<HTMLMetaElement>('meta[name=description]')\n          ?.content || '';\n    }\n    if (this.title === null) {\n      this.title = document.title || '';\n    }\n    if (this.url === null) {\n      this.url =\n        document.querySelector<HTMLLinkElement>('link[rel=canonical]')?.href ||\n        window.location.href;\n    }\n    if (!this.dialogTitle) {\n      this.dialogTitle = 'Share';\n    }\n    if (!this.copyHint) {\n      this.copyHint = 'Copy';\n    }\n    if (!this.handle) {\n      this.handle = 'auto';\n    }\n\n    this._backdropRef =\n      this.shadowRoot.querySelector<HTMLDivElement>('#backdrop');\n    this._dialogRef = this.shadowRoot.querySelector<HTMLDivElement>('#dialog');\n    this._dialogTitleRef =\n      this.shadowRoot.querySelector<HTMLHeadingElement>('#title');\n    this._dialogTitleRef.textContent = this.dialogTitle;\n    this._targetsContainerRef =\n      this.shadowRoot.querySelector<HTMLDivElement>('#targets-container');\n\n    this._clipboardImagePreviewRef =\n      this.shadowRoot.querySelector<HTMLImageElement>(\n        '#clipboard-image-preview',\n      );\n    this._clipboardPreviewRef =\n      this.shadowRoot.querySelector<HTMLPreElement>('#clipboard-preview');\n    this._clipboardButtonRef =\n      this.shadowRoot.querySelector<HTMLButtonElement>('.target#clipboard');\n\n    const textToCopyArray = [\n      ...(this.title ? [this.title] : []),\n      ...(this.text ? [this.text] : []),\n      ...(this.url ? [this.url] : []),\n    ];\n\n    this._clipboardPreviewRef.textContent = textToCopyArray.join('\\n');\n\n    if (navigator.clipboard) {\n      const cliboardButtonRef =\n        this.shadowRoot.querySelector<HTMLButtonElement>('#clipboard');\n\n      cliboardButtonRef.addEventListener('click', async () => {\n        const textToCopy = textToCopyArray.join('\\n\\n');\n        try {\n          const file = await this._filePromise;\n          await this._copyToClipboard(textToCopy, file);\n          this._emitCustomEvent('share', {\n            target: 'clipboard',\n            origin: 'fallback',\n          });\n        } catch (error) {\n          this.dispatchEvent(\n            new ErrorEvent('error', {\n              message: 'Unable to copy to clipboard',\n              error,\n            }),\n          );\n        }\n        this._close();\n      });\n\n      this._firstFocusableElRef = cliboardButtonRef;\n    } else {\n      const clipboardContainerRef =\n        this.shadowRoot.querySelector<HTMLDivElement>('#clipboard-container');\n\n      clipboardContainerRef.parentNode.removeChild(clipboardContainerRef);\n    }\n\n    const slotRef = this.shadowRoot.querySelector('slot');\n\n    slotRef.addEventListener('slotchange', async () => {\n      const assignedNodes = slotRef.assignedNodes({ flatten: true });\n      const rootShareTargets = assignedNodes.filter(\n        isShareTargetNode,\n      ) as ShareTarget[];\n      const nestedShareTargets = assignedNodes\n        .filter(isShareTargetPreset)\n        .flatMap((target) => Array.from((target as HTMLElement).children));\n      const shareTargets = [...rootShareTargets, ...nestedShareTargets].filter(\n        isShareTarget,\n      );\n\n      await Promise.all(\n        shareTargets.map((target) =>\n          customElements.whenDefined(target.nodeName.toLowerCase()),\n        ),\n      );\n\n      this._targets = shareTargets;\n      this._renderTargets();\n    });\n  }\n\n  /** @private */\n  private attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string,\n  ) {\n    if (oldValue === newValue) {\n      return;\n    }\n    switch (name) {\n      case 'dialog-title':\n        if (this._dialogTitleRef) {\n          this._dialogTitleRef.textContent = newValue;\n        }\n        break;\n      case 'copy-hint':\n        if (this._clipboardButtonRef) {\n          this._clipboardButtonRef.setAttribute('aria-label', newValue);\n        }\n        break;\n      case 'opened':\n        if (newValue === null) {\n          this._close();\n        } else {\n          this.share();\n        }\n        break;\n      case 'text':\n      case 'title':\n      case 'url':\n        if (this._clipboardPreviewRef) {\n          this._clipboardPreviewRef.textContent = [\n            ...(this.title ? [this.title] : []),\n            ...(this.text ? [this.text] : []),\n            ...(this.url ? [this.url] : []),\n          ].join('\\n');\n        }\n        break;\n      case 'image':\n        // Instantiate an URL, so that we can handle errors before\n        // trying to fetch the image if the URL is invalid\n        try {\n          const url = new URL(newValue, window.location.href);\n          if (this._clipboardImagePreviewRef) {\n            this._clipboardImagePreviewRef.src = url.href;\n          }\n          this._filePromise = this._extractFileFromUrl(url).catch(\n            () => undefined,\n          );\n        } catch {\n          if (this._clipboardImagePreviewRef) {\n            this._clipboardImagePreviewRef.src = '';\n          }\n          this._filePromise = Promise.resolve<File>(undefined);\n        }\n        break;\n    }\n  }\n\n  /** @private */\n  private _copyToClipboard(text?: string, blob?: Blob): Promise<void> {\n    // Firefox supports writeText but not write\n    if (!navigator.clipboard.write) {\n      return navigator.clipboard.writeText(text);\n    }\n    return navigator.clipboard.write([\n      new ClipboardItem({\n        ...(text && {\n          'text/plain': new Blob([text], {\n            type: 'text/plain',\n          }),\n        }),\n        ...(blob && { [blob.type]: blob }),\n      }),\n    ]);\n  }\n\n  /** @private */\n  private async _extractFileFromUrl(url: URL): Promise<File> {\n    const res = await fetch(url);\n    const blob = await res.blob();\n    return new File([blob], url.pathname.split('/').pop(), { type: blob.type });\n  }\n\n  /** @private */\n  private _renderTargets() {\n    if (!this._targetsContainerRef) {\n      return;\n    }\n    this._targetsContainerRef.innerHTML = '';\n    this._targets.forEach((shareTarget, index) => {\n      const { nodeName, color, outline, icon, displayName, hint } = shareTarget;\n      const logoColor = this._computeContrastColor(outline || color);\n\n      const target = nodeName.slice(13).toLowerCase();\n      const targetButton: HTMLButtonElement = document.createElement('button');\n      targetButton.className = 'target';\n      targetButton.id = target;\n      targetButton.title = `${displayName}${hint ? ` ${hint}` : ''}`;\n      targetButton.setAttribute('part', 'target-button');\n      targetButton.addEventListener('click', () => {\n        shareTarget.share(this);\n        this._emitCustomEvent('share', { target, origin: 'fallback' });\n        this._close();\n      });\n\n      const targetIcon: HTMLDivElement = document.createElement('div');\n      targetIcon.className = 'icon';\n      targetIcon.innerHTML = `<svg viewBox=\"0 0 256 256\" fill=\"#${logoColor}\" ${\n        outline\n          ? `stroke=\"#${outline}\" stroke-width=\"16\" stroke-linecap=\"round\" stroke-linejoin=\"round\"`\n          : ''\n      }><path d=\"${icon}\"/></svg>`;\n      targetIcon.style.background = `#${color}`;\n      targetIcon.setAttribute('part', 'target-icon');\n      targetButton.appendChild(targetIcon);\n\n      const targetLabel: HTMLDivElement = document.createElement('div');\n      targetLabel.className = 'label';\n      targetLabel.textContent = displayName;\n      targetLabel.setAttribute('part', 'target-label');\n      targetButton.appendChild(targetLabel);\n\n      if (hint) {\n        const targetHint: HTMLDivElement = document.createElement('div');\n        targetHint.className = 'hint';\n        targetHint.textContent = hint;\n        targetButton.appendChild(targetHint);\n      }\n\n      this._targetsContainerRef.appendChild(targetButton);\n\n      if (!navigator.clipboard && index === 0) {\n        this._firstFocusableElRef = targetButton;\n      }\n\n      if (index === this._targets.length - 1) {\n        this._lastFocusableElRef = targetButton;\n      }\n    });\n  }\n\n  public openWindow(\n    url: string,\n    query: Record<string, string | number | boolean | null | undefined> = {},\n    replace?: boolean,\n  ) {\n    const queryEntries = Object.entries(query);\n    return window.open(\n      `${url}${\n        queryEntries.length > 0\n          ? `?${new URLSearchParams(\n              queryEntries.reduce(\n                (newQuery, [key, value]) => ({\n                  ...newQuery,\n                  ...(typeof value !== 'undefined' && {\n                    [key]: `${value}`,\n                  }),\n                }),\n                {},\n              ),\n            ).toString()}`\n          : ''\n      }`,\n      replace ? '_self' : '_blank',\n      `width=${screen.width / 2},height=${screen.height / 2},left=${\n        screen.width / 4\n      },top=${screen.height / 4},menubar=0,status=0,titlebar=0,toolbar=0`,\n    );\n  }\n\n  /** @private */\n  private _computeContrastColor(hex: string): string {\n    const fullHex = hex.length === 3 ? hex.repeat(2) : hex;\n    const [r, g, b] = fullHex.match(/.{2}/g).map((c) => parseInt(c, 16));\n    return r * 0.299 + g * 0.587 + b * 0.114 <= 186 ? 'fff' : '000';\n  }\n\n  /** @private */\n  private _emitCustomEvent<T extends ShareMenuShareEvent | ShareMenuCloseEvent>(\n    type: string,\n    detail: T['detail'],\n  ) {\n    return this.dispatchEvent(\n      new CustomEvent(type, {\n        bubbles: true,\n        composed: true,\n        detail,\n      }),\n    );\n  }\n\n  /** @private */\n  private _showFallbackShare() {\n    return new Promise<void>((resolve, reject) => {\n      this._previousFocus = document.activeElement as HTMLElement;\n      this.style.display = 'block';\n      this._firstFocusableElRef?.focus();\n      this.scrollTop = Math.max(\n        window.innerHeight / 2,\n        window.innerHeight - this._dialogRef.offsetHeight,\n      );\n      this.opened = true;\n      this._backdropRef.addEventListener('click', this._close.bind(this));\n      this.addEventListener('scroll', this._handleScroll.bind(this));\n      this.addEventListener('keydown', this._handleKeyDown.bind(this));\n      this.addEventListener('share', () => resolve(), { once: true });\n      this.addEventListener('error', () => reject(), { once: true });\n    });\n  }\n\n  /** @private */\n  private _close() {\n    this._backdropRef.removeEventListener('click', this._close);\n    this.removeEventListener('scroll', this._handleScroll);\n    this.opened = false;\n    this.scroll({\n      behavior: 'smooth',\n      top: 0,\n    });\n    if (this._previousFocus) {\n      this._previousFocus.focus();\n      this._previousFocus = null;\n    }\n    setTimeout(() => {\n      this.style.display = 'none';\n      this._emitCustomEvent('close', { origin: 'fallback' });\n    }, 300);\n  }\n\n  /** @private */\n  private _handleScroll() {\n    if (this.scrollTop < 80) {\n      this._close();\n    }\n  }\n\n  /** @private */\n  private _handleKeyDown(e: KeyboardEvent) {\n    switch (e.key) {\n      case 'Escape':\n        this._close();\n        break;\n      case 'Tab':\n        if (this._targets.length < 2) {\n          e.preventDefault();\n          break;\n        }\n        const activeEl =\n          this.shadowRoot.activeElement || document.activeElement;\n        if (e.shiftKey && activeEl === this._firstFocusableElRef) {\n          e.preventDefault();\n          this._lastFocusableElRef.focus();\n        } else if (!e.shiftKey && activeEl === this._lastFocusableElRef) {\n          e.preventDefault();\n          this._firstFocusableElRef.focus();\n        }\n        break;\n    }\n  }\n}\n\nexport type ShareMenuEventOrigin = 'fallback' | 'native';\n\nexport interface ShareMenuShareEventPayload {\n  target?: string;\n  origin: ShareMenuEventOrigin;\n}\nexport type ShareMenuShareEvent = CustomEvent<ShareMenuShareEventPayload>;\n\nexport interface ShareMenuCloseEventPayload {\n  origin: ShareMenuEventOrigin;\n}\nexport type ShareMenuCloseEvent = CustomEvent<ShareMenuCloseEventPayload>;\n\nexport interface ShareMenuEventMap extends HTMLElementEventMap {\n  share: ShareMenuShareEvent;\n  close: ShareMenuCloseEvent;\n}\n\nexport declare interface ShareMenu {\n  addEventListener<K extends keyof ShareMenuEventMap>(\n    type: K,\n    listener: (this: ShareMenu, ev: ShareMenuEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ): void;\n}\n\ncustomElements.define('share-menu', ShareMenu);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'share-menu': ShareMenu;\n  }\n}\n"],"names":["isShareTargetNode","node","nodeType","Node","ELEMENT_NODE","nodeName","startsWith","isShareTargetPreset","isShareTarget","shareTarget","displayName","color","icon","share","ShareMenu","HTMLElement","opened","this","hasAttribute","val","updateBooleanAttribute","dialogTitle","getAttribute","updateStringAttribute","copyHint","text","title","url","image","noBackdrop","handle","targets","_targets","constructor","super","_filePromise","Promise","resolve","undefined","_styles","_template","document","createElement","innerHTML","_supportsAdoptingStyleSheets","shadowRoot","attachShadow","mode","stylesheet","CSSStyleSheet","adoptedStyleSheets","appendChild","content","cloneNode","navigator","_showFallbackShare","file","files","forEach","event","_emitCustomEvent","origin","error","name","connectedCallback","cssRules","length","replace","_a","querySelector","_b","href","window","location","_backdropRef","_dialogRef","_dialogTitleRef","textContent","_targetsContainerRef","_clipboardImagePreviewRef","_clipboardPreviewRef","_clipboardButtonRef","textToCopyArray","join","clipboard","cliboardButtonRef","addEventListener","async","textToCopy","_copyToClipboard","target","dispatchEvent","ErrorEvent","message","_close","_firstFocusableElRef","clipboardContainerRef","parentNode","removeChild","slotRef","assignedNodes","flatten","shareTargets","filter","flatMap","Array","from","children","all","map","customElements","whenDefined","toLowerCase","_renderTargets","attributeChangedCallback","oldValue","newValue","setAttribute","URL","src","_extractFileFromUrl","catch","blob","write","ClipboardItem","Object","assign","Blob","type","writeText","res","fetch","File","pathname","split","pop","index","outline","hint","logoColor","_computeContrastColor","slice","targetButton","className","id","targetIcon","style","background","targetLabel","targetHint","_lastFocusableElRef","openWindow","query","queryEntries","entries","open","URLSearchParams","reduce","newQuery","key","value","toString","screen","width","height","hex","fullHex","repeat","r","g","b","match","c","parseInt","detail","CustomEvent","bubbles","composed","reject","_previousFocus","activeElement","display","focus","scrollTop","Math","max","innerHeight","offsetHeight","bind","_handleScroll","_handleKeyDown","once","removeEventListener","scroll","behavior","top","setTimeout","e","preventDefault","activeEl","shiftKey","observedAttributes","globalThis","prototype","define"],"mappings":"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"}