{"version":3,"file":"LocaleLoader.js","sourceRoot":"","sources":["../../../src/locale/LocaleLoader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,6BAA6B,CAAC;AAGtD,MAAM,CAAC,OAAO,OAAO,YAAY;IAC7B,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACnC;QACD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACnC;QACD,wDAAwD;QACxD,MAAM,IAAI,GAAQ,MAAM,MAAM,CAAC,uBAAuB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1E,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;CACJ","sourcesContent":["import { CONFIG_LOCALE } from './Locale';\nimport { english } from 'flatpickr/dist/l10n/default';\nimport { CustomLocale } from 'flatpickr/dist/types/locale';\n\nexport default class LocaleLoader {\n    constructor(public locale: string) {\n        this.locale = locale;\n    }\n\n    async initializeLocale(): Promise<CustomLocale> {\n        if (!this.locale) {\n            return Promise.resolve(english);\n        }\n        const locale = Object.values(CONFIG_LOCALE).filter(lang => lang['key'] === this.locale)[0];\n        if (!locale) {\n            return Promise.resolve(english);\n        }\n        /* eslint-disable  @typescript-eslint/no-explicit-any */\n        const lang: any = await import(`flatpickr/dist/l10n/${locale['key']}.js`);\n\n        return Promise.resolve(lang[locale['value']]);\n    }\n}\n"]}