import { TiktokenModel } from "tiktoken";
import { PolicySynthAgentBase } from "../base/agentBase.js";
import type { ChatCompletionTool, ChatCompletionToolChoiceOption } from "openai/resources/chat/completions";
export declare abstract class BaseChatModel extends PolicySynthAgentBase {
    modelName: string | TiktokenModel;
    maxTokensOut: number;
    provider?: string;
    config: PsAiModelConfig;
    dbModelId?: number;
    constructor(config: PsAiModelConfig, modelName: string | TiktokenModel, maxTokensOut?: number);
    abstract generate(messages: PsModelMessage[], streaming?: boolean, streamingCallback?: Function, media?: {
        mimeType: string;
        data: string;
    }[], tools?: ChatCompletionTool[], toolChoice?: ChatCompletionToolChoiceOption | "auto", allowedTools?: string[]): Promise<PsBaseModelReturnParameters | undefined>;
    truncateXmlTags(text: string, maxChars?: number): string;
    prettyPrintPromptMessages(messages: {
        role: string;
        content: string;
    }[]): string;
    colorCodeXml(text: string): string;
}
//# sourceMappingURL=baseChatModel.d.ts.map