import { GenerateContentResponse, HarmBlockThreshold, HarmCategory } from "@google/genai";
import type { ChatCompletionTool, ChatCompletionToolChoiceOption } from "openai/resources/chat/completions";
import { BaseChatModel } from "./baseChatModel.js";
export declare class GoogleGeminiChat extends BaseChatModel {
    private readonly ai;
    readonly modelName: string;
    constructor(config: PsAiModelConfig);
    private buildContents;
    private tokensOut;
    private logTokens;
    static safetySettings: {
        category: HarmCategory;
        threshold: HarmBlockThreshold;
    }[];
    assertGeminiNotBlocked(response: GenerateContentResponse): void;
    generate(messages: PsModelMessage[], streaming?: boolean, streamingCallback?: (chunk: string) => void, media?: {
        mimeType: string;
        data: string;
    }[], tools?: ChatCompletionTool[], toolChoice?: ChatCompletionToolChoiceOption | "auto", allowedTools?: string[]): Promise<PsBaseModelReturnParameters>;
}
//# sourceMappingURL=googleGeminiChat.d.ts.map