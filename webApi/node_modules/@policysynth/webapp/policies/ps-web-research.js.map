{"version":3,"file":"ps-web-research.js","sourceRoot":"","sources":["../../src/policies/ps-web-research.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport '@yrpri/webapp/common/yp-image.js';\n\nimport { PsStageBase } from '../base/ps-stage-base.js';\nimport { IEngineConstants } from '../constants.js';\n\n@customElement('ps-web-research')\nexport class PsWebResearch extends PsStageBase {\n  maxNumberOfTopEntities = 4;\n\n  async connectedCallback() {\n    super.connectedCallback();\n    window.psAppGlobals.activity(`Web research - open`);\n    if (this.memory.groupId === 1) {\n      this.maxNumberOfTopEntities = 3;\n    }\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.psAppGlobals.activity(`Web research - close`);\n  }\n\n  static get styles() {\n    return [\n      super.styles,\n      css`\n        .subProblemContainer {\n          margin-top: 64px;\n        }\n\n        .entity {\n          width: 940px;\n          max-width: 100%;\n          color: var(--md-sys-color-on-surface);\n          background-color: var(--md-sys-color-surface);\n        }\n\n        .entity[not-scanned] {\n          opacity: 0.50;\n        }\n\n\n        .entityName {\n          margin-top: 24px;\n          margin-bottom: 8px;\n          width: 100%;\n          font-size: 20px;\n          font-weight: bold;\n        }\n\n        .entityName[not-scanned] {\n          font-weight: 300;\n        }\n\n        .negPos {\n          width: 100%;\n          margin-top: 16px;\n        }\n\n        @media (max-width: 960px) {\n          .entity {\n            width: 100%;\n          }\n\n          .entityName {\n            font-size: 18px;\n          }\n      `,\n    ];\n  }\n\n  render() {\n    return html`\n      <div class=\"topContainer layout vertical center-center\">\n        ${this.renderProblemStatement(this.t('Automated Web Research'))}\n        ${this.renderSearchQueries(\n          this.t('Search queries for problem statement'),\n          this.memory.problemStatement.searchQueries\n        )}\n        ${this.renderSearchResults(\n          this.t('Webpages scanned for solutions to problem statement'),\n          this.memory.problemStatement.searchResults\n        )}\n        ${this.renderSubProblemsWithAll()}\n      </div>\n    `;\n  }\n\n  renderEntities(subProblem: IEngineSubProblem) {\n    return html`\n      ${subProblem.entities.map((entity, entityIndex) => {\n        const isEntityLessProminent =\n          entityIndex >= this.maxNumberOfTopEntities;\n        return html`\n          <div class=\"layout vertical center-center\">\n            <div\n              class=\"entity ${isEntityLessProminent ? 'lessProminent' : ''}\"\n              ?not-scanned=\"${isEntityLessProminent}\"\n            >\n              <div class=\"entityName\" ?not-scanned=\"${isEntityLessProminent}\">\n                ${entity.name}\n              </div>\n              <div class=\"negPos\">\n                ${entity.negativeEffects?.length > 0\n                  ? html`\n                      <div>\n                        Negative Effects:\n                        <ul>\n                          ${entity.negativeEffects?.map(\n                            effect => html` <li>${effect}</li> `\n                          )}\n                        </ul>\n                      </div>\n                    `\n                  : nothing}\n                ${entity.positiveEffects?.length > 0\n                  ? html`\n                      <div>\n                        Positive Effects:\n                        <ul>\n                          ${entity.positiveEffects?.map(\n                            effect => html` <li>${effect}</li> `\n                          )}\n                        </ul>\n                      </div>\n                    `\n                  : nothing}\n                ${!isEntityLessProminent\n                  ? html`\n                      ${this.renderSearchQueries(\n                        this.t('Search queries for entity'),\n                        entity.searchQueries\n                      )}\n                      ${this.renderSearchResults(\n                        this.t(\n                          'Webpages scanned for solutions to entites problems'\n                        ),\n                        entity.searchResults\n                      )}\n                    `\n                  : nothing}\n              </div>\n            </div>\n          </div>\n        `;\n      })}\n    `;\n  }\n\n  renderSubProblemsWithAll() {\n    const topSubProblems = this.memory.subProblems.slice(\n      0,\n      IEngineConstants.maxSubProblems\n    );\n\n    return html`\n      ${topSubProblems.map(\n        subProblem =>\n          html`\n            <div class=\"subProblemContainer layout vertical center-center\">\n              ${this.renderSubProblem(subProblem, false, 0, true, true, true)}\n              ${this.renderSearchQueries(\n                this.t('Search queries for sub problem'),\n                subProblem.searchQueries\n              )}\n              ${this.renderSearchResults(\n                this.t('Webpages scanned for solutions to sub problem'),\n                subProblem.searchResults\n              )}\n              ${this.renderEntities(subProblem)}\n            </div>\n          `\n      )}\n    `;\n  }\n}\n"]}